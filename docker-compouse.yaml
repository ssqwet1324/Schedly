version: '3.8'

services:
  postgres:
    image: postgres:alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
    networks:
      - app-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    depends_on:
      - zookeeper
    networks:
      - app-network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    volumes:
      - C:/Users/1/kui/config.yml:/etc/kafkaui/dynamic_config.yaml
    networks:
      - app-network


  auth_service:
    build: ./backend/auth_service
    ports:
      - "8090:8090"
    environment:
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - JWT_SECRET=super_secret_key
    depends_on:
      - postgres
    networks:
      - app-network

  notification_service:
    build: ./backend/notification_service
    ports:
      - "8091:8091"
    environment:
      - REDIS_ADDR=redis:6379
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - redis
      - kafka
    networks:
      - app-network

  sender_service:
    build: ./backend/sender_service
    ports:
      - "8092:8092"
    depends_on:
      - kafka
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
